// –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –ª–∏ –∏–≥—Ä–æ–∫
if (window.location.pathname.includes('/player/')) {
    const playerId = window.location.pathname.split('/').pop();
    fetch('/api/check_access', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
        },
        body: JSON.stringify({ player_id: playerId })
    })
    .then(response => response.json())
    .then(data => {
        if (!data.has_access) {
            window.location.href = '/register';
        }
    });
}

function loadPlayers() {
    fetch('/api/players')
        .then(response => {
            if (!response.ok) {
                throw new Error('Network response was not ok');
            }
            return response.json();
        })
        .then(players => {
            console.log('Players loaded:', players);  // –û—Ç–ª–∞–¥–æ—á–Ω—ã–π –≤—ã–≤–æ–¥
            const playersList = document.getElementById('players-list');
            if (players.length === 0) {
                playersList.innerHTML = '<div class="alert alert-warning">–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∏–≥—Ä–æ–∫–æ–≤</div>';
            } else {
                playersList.innerHTML = players.map(player => `
                    <a href="/player/${player.id}" class="list-group-item list-group-item-action">
                        –ò–≥—Ä–æ–∫ #${player.id}: ${player.name}
                    </a>
                `).join('');
            }
        })
        .catch(error => {
            console.error('Error loading players:', error);
            const playersList = document.getElementById('players-list');
            playersList.innerHTML = '<div class="alert alert-danger">–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å–ø–∏—Å–∫–∞ –∏–≥—Ä–æ–∫–æ–≤</div>';
        });
}

document.addEventListener('DOMContentLoaded', function() {
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º IP —Å–µ—Ä–≤–µ—Ä–∞
    fetch('/api/server_info')
        .then(response => response.json())
        .then(data => {
            const serverIpElement = document.getElementById('server-ip');
            if (serverIpElement) {
                serverIpElement.textContent = data.ip;
            }
        });
    
    // –ó–∞–≥—Ä—É–∑–∫–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–∞—Ç–∞–∫–ª–∏–∑–º–µ
    fetch('/api/cataclysm')
        .then(response => response.json())
        .then(data => {
            const cataclysmInfo = document.getElementById('cataclysm-info');
            cataclysmInfo.innerHTML = `
                <h5>${data.description}</h5>
                <p>üë• –û—Å—Ç–∞—Ç–æ–∫ –≤—ã–∂–∏–≤—à–µ–≥–æ –Ω–∞—Å–µ–ª–µ–Ω–∏—è: ${data.population}%</p>
                <p>üí• –†–∞–∑—Ä—É—à–µ–Ω–∏—è –Ω–∞ –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–∏: ${data.destruction}%</p>
                <h5 class="mt-3">–£–±–µ–∂–∏—â–µ</h5>
                <p>üè° –ü–ª–æ—â–∞–¥—å —É–±–µ–∂–∏—â–∞: ${data.shelter_area}–º¬≤</p>
                <p>‚åõ –í—Ä–µ–º—è –Ω–∞—Ö–æ–∂–¥–µ–Ω–∏—è –≤ —É–±–µ–∂–∏—â–µ: ${data.time_in_shelter}</p>
                <p>üîì ${data.conditions}</p>
                <p class="mt-2"><strong>–û–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ:</strong></p>
                <ul>
                    ${data.equipment.map(item => `<li>üîß ${item}</li>`).join('')}
                </ul>
                <p class="mt-2"><strong>–ü—Ä–∏–ø–∞—Å—ã:</strong></p>
                <ul>
                    ${data.supplies.map(item => `<li>üì¶ ${item}</li>`).join('')}
                </ul>
                <p class="mt-2"><strong>–û–±–∏—Ç–∞—Ç–µ–ª–∏:</strong></p>
                <ul>
                    ${data.inhabitants.map(item => `<li>‚ôª ${item}</li>`).join('')}
                </ul>
            `;
        });

    // –ó–∞–≥—Ä—É–∑–∫–∞ —Å–ø–∏—Å–∫–∞ –∏–≥—Ä–æ–∫–æ–≤
    loadPlayers();

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–†–∞—Å–∫—Ä—ã—Ç—å" –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –∏–≥—Ä–æ–∫–∞
    const revealBtn = document.getElementById('reveal-btn');
    if (revealBtn) {
        revealBtn.addEventListener('click', function() {
            const playerId = window.location.pathname.split('/').pop();
            fetch(`/api/reveal/${playerId}`, { method: 'POST' })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        location.reload();
                    }
                });
        });
    }

    // –ó–∞–≥—Ä—É–∑–∫–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∏–≥—Ä–æ–∫–µ
    const playerInfo = document.getElementById('player-info');
    if (playerInfo) {
        const playerId = window.location.pathname.split('/').pop();
        fetch(`/api/player/${playerId}`)
            .then(response => response.json())
            .then(data => {
                playerInfo.innerHTML = `
                    <p>ü™™ <strong>–ò–º—è –§–∞–º–∏–ª–∏—è:</strong> ${data.name}</p>
                    <p>üíº <strong>–ü—Ä–æ—Ñ–µ—Å—Å–∏—è:</strong> ${data.profession}</p>
                    <p>üë• <strong>–ü–æ–ª:</strong> ${data.gender}</p>
                    <p>üß∏ <strong>–í–æ–∑—Ä–∞—Å—Ç:</strong> ${data.age}</p>
                    <p>üë∂ <strong>–î–µ—Ç–æ—Ä–æ–∂–¥–µ–Ω–∏–µ:</strong> ${data.childfree}</p>
                    <p>üßò <strong>–¢–µ–ª–æ—Å–ª–æ–∂–µ–Ω–∏–µ:</strong> ${data.physique}</p>
                    <p class="mt-3"><strong>–ó–¥–æ—Ä–æ–≤—å–µ:</strong></p>
                    <ul>
                        ${data.health.map(item => `<li>‚ù§ ${item}</li>`).join('')}
                    </ul>
                    <p class="mt-3"><strong>–ß–µ—Ä—Ç—ã —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∞:</strong></p>
                    <ul>
                        ${data.traits.map(item => `<li>üë∫ ${item}</li>`).join('')}
                    </ul>
                    <p class="mt-3"><strong>–§–æ–±–∏–∏:</strong></p>
                    <ul>
                        ${data.phobias.map(item => `<li>üëª ${item}</li>`).join('')}
                    </ul>
                    <p class="mt-3"><strong>–•–æ–±–±–∏:</strong></p>
                    <ul>
                        ${data.hobbies.map(item => `<li>üé£ ${item}</li>`).join('')}
                    </ul>
                    <p class="mt-3"><strong>–î–æ–ø. –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:</strong></p>
                    <ul>
                        ${data.additional_info.map(item => `<li>üìù ${item}</li>`).join('')}
                    </ul>
                    <p class="mt-3"><strong>–ë–∞–≥–∞–∂:</strong></p>
                    <ul>
                        ${data.baggage.map(item => `<li>üì¶ ${item}</li>`).join('')}
                    </ul>
                    <p class="mt-3"><strong>–ö–∞—Ä—Ç—ã:</strong></p>
                    <ul>
                        ${data.cards.map((item, index) => `<li>üÉè –ö–∞—Ä—Ç–∞ ${index + 1}: ${item}</li>`).join('')}
                    </ul>
                `;
            });
    }
});