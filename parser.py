import os
import re
from flask import current_app
from models import db, Cataclysm, Player

def parse_game_data(game_folder):
    """–ü–∞—Ä—Å–∏—Ç –¥–∞–Ω–Ω—ã–µ –∏–≥—Ä—ã –∏–∑ —É–∫–∞–∑–∞–Ω–Ω–æ–π –ø–∞–ø–∫–∏ –∏ –æ–±–Ω–æ–≤–ª—è–µ—Ç –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö"""
    try:
        game_path = os.path.join('games', game_folder)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–∞–ø–∫–∞ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        if not os.path.exists(game_path):
            raise ValueError(f"–ü–∞–ø–∫–∞ –∏–≥—Ä—ã '{game_folder}' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ 'games'")
        
        # –û—á–∏—â–∞–µ–º —Ç–µ–∫—É—â–∏–µ –¥–∞–Ω–Ω—ã–µ
        try:
            db.session.query(Player).delete()
            db.session.query(Cataclysm).delete()
            db.session.commit()
        except Exception as e:
            db.session.rollback()
            raise
        
        # –ò—â–µ–º –≤—Å–µ —Ñ–∞–π–ª—ã –∏–≥—Ä–æ–∫–æ–≤
        player_files = sorted(
            [f for f in os.listdir(game_path) 
             if re.match(r'Player \d+\.txt$', f)],
            key=lambda x: int(re.search(r'\d+', x).group())
        )
        
        if not player_files:
            raise ValueError(f"–í –ø–∞–ø–∫–µ '{game_folder}' –Ω–µ –Ω–∞–π–¥–µ–Ω—ã —Ñ–∞–π–ª—ã –∏–≥—Ä–æ–∫–æ–≤ (–æ–∂–∏–¥–∞—é—Ç—Å—è —Ñ–∞–π–ª—ã –≤–∏–¥–∞ Player1.txt, Player2.txt...)")
        
        # –ü–∞—Ä—Å–∏–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –ø–µ—Ä–≤–æ–≥–æ —Ñ–∞–π–ª–∞ –∏–≥—Ä–æ–∫–∞ (–¥–ª—è –∫–∞—Ç–∞–∫–ª–∏–∑–º–∞ –∏ —É–±–µ–∂–∏—â–∞)
        first_player_path = os.path.join(game_path, player_files[0])
        with open(first_player_path, 'r', encoding='utf-8') as file:
            content = file.read()
        
        # –ü–∞—Ä—Å–∏–º –¥–∞–Ω–Ω—ã–µ –æ –∫–∞—Ç–∞–∫–ª–∏–∑–º–µ –∏ —É–±–µ–∂–∏—â–µ
        cataclysm_data = parse_cataclysm(content)
        shelter_data = parse_shelter(content)
        
        # –°–æ–∑–¥–∞–µ–º –∑–∞–ø–∏—Å—å –æ –∫–∞—Ç–∞–∫–ª–∏–∑–º–µ
        cataclysm = Cataclysm(
            description=cataclysm_data['description'],
            population=cataclysm_data['population'],
            destruction=cataclysm_data['destruction'],
            shelter_area=shelter_data['area'],
            time_in_shelter=shelter_data['time'],
            conditions=shelter_data['conditions'],
            equipment='|'.join(shelter_data['equipment']),
            supplies='|'.join(shelter_data['supplies']),
            inhabitants='|'.join(shelter_data['inhabitants'])
        )
        db.session.add(cataclysm)
        
        # –ü–∞—Ä—Å–∏–º –¥–∞–Ω–Ω—ã–µ –≤—Å–µ—Ö –∏–≥—Ä–æ–∫–æ–≤
        for player_file in player_files:
            player_path = os.path.join(game_path, player_file)
            with open(player_path, 'r', encoding='utf-8') as file:
                content = file.read()
                player_data = parse_player(content)
                
                player = Player(
                    name=player_data['name'],
                    profession=player_data['profession'],
                    gender=player_data['gender'],
                    age=player_data['age'],
                    childfree=player_data['childfree'],
                    physique=player_data['physique'],
                    health='|'.join(player_data['health']),
                    traits='|'.join(player_data['traits']),
                    phobias='|'.join(player_data['phobias']),
                    hobbies='|'.join(player_data['hobbies']),
                    additional_info='|'.join(player_data['additional_info']),
                    baggage='|'.join(player_data['baggage']),
                    cards='|'.join(player_data['cards']),
                    name_revealed=False,
                    profession_revealed=False,
                    gender_revealed=False,
                    age_revealed=False,
                    childfree_revealed=False,
                    physique_revealed=False,
                    health_revealed="",
                    traits_revealed="",
                    phobias_revealed="",
                    hobbies_revealed="",
                    additional_info_revealed="",
                    baggage_revealed="",
                    cards_revealed=""
                )
                db.session.add(player)
        
        db.session.commit()
        return len(player_files)
    
    except Exception as e:
        db.session.rollback()
        raise ValueError(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–∞—Ä—Å–∏–Ω–≥–µ –∏–≥—Ä—ã: {str(e)}")

def parse_cataclysm(content):
    """–ü–∞—Ä—Å–∏—Ç –¥–∞–Ω–Ω—ã–µ –æ –∫–∞—Ç–∞–∫–ª–∏–∑–º–µ"""
    start = content.find('–ö–∞—Ç–∞–∫–ª–∏–∑–º')
    end = content.find('-----------–£–±–µ–∂–∏—â–µ-------------')
    
    if start == -1 or end == -1:
        raise ValueError("–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Ñ–∞–π–ª–∞: –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–∞—Ç–∞–∫–ª–∏–∑–º–µ")
    
    cataclysm_section = content[start:end]
    
    # –ò–∑–≤–ª–µ–∫–∞–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ
    description_start = cataclysm_section.find('–ö–∞—Ç–∞–∫–ª–∏–∑–º') + 11
    description_end = cataclysm_section.find('üë•')
    description = cataclysm_section[description_start:description_end].strip()
    
    # –ò–∑–≤–ª–µ–∫–∞–µ–º –Ω–∞—Å–µ–ª–µ–Ω–∏–µ
    population_start = cataclysm_section.find('üë•') + 30
    population_end = cataclysm_section.find('üí•')
    population = int(cataclysm_section[population_start:population_end].strip().replace('%', ''))
    
    # –ò–∑–≤–ª–µ–∫–∞–µ–º —Ä–∞–∑—Ä—É—à–µ–Ω–∏—è
    destruction_start = cataclysm_section.find('üí•') + 28
    destruction_end = cataclysm_section.find('üè°')
    destruction = int(cataclysm_section[destruction_start:destruction_end].strip().replace('%', ''))
    
    return {
        'description': description,
        'population': population,
        'destruction': destruction
    }

def parse_shelter(content):
    """–ü–∞—Ä—Å–∏—Ç –¥–∞–Ω–Ω—ã–µ –æ–± —É–±–µ–∂–∏—â–µ"""
    start = content.find('-----------–£–±–µ–∂–∏—â–µ-------------')
    end = content.find('-----------–í–∞—à –ø–µ—Ä—Å–æ–Ω–∞–∂--------')
    
    if start == -1 or end == -1:
        raise ValueError("–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Ñ–∞–π–ª–∞: –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± —É–±–µ–∂–∏—â–µ")
    
    shelter_section = content[start:end]
    
    # –ò–∑–≤–ª–µ–∫–∞–µ–º –ø–ª–æ—â–∞–¥—å
    area_start = shelter_section.find('üè°') + 18
    area_end = shelter_section.find('‚åõ')
    area = int(shelter_section[area_start:area_end].strip().split()[0])
    
    # –ò–∑–≤–ª–µ–∫–∞–µ–º –≤—Ä–µ–º—è
    time_start = shelter_section.find('‚åõ') + 29
    time_end = shelter_section.find('üîì')
    time = shelter_section[time_start:time_end].strip()
    
    # –ò–∑–≤–ª–µ–∫–∞–µ–º —É—Å–ª–æ–≤–∏—è
    conditions_start = shelter_section.find('üîì') + 2
    conditions_end = shelter_section.find('üîß')
    conditions = shelter_section[conditions_start:conditions_end].strip()
    
    # –ò–∑–≤–ª–µ–∫–∞–µ–º –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ
    equipment = []
    equip_start = shelter_section.find('üîß') + 24
    next_equip = shelter_section.find('üîß', equip_start)
    next_supply = shelter_section.find('üì¶')
    
    while next_equip != -1 and next_equip < next_supply:
        equipment.append(shelter_section[equip_start:next_equip].strip())
        equip_start = next_equip + 24
        next_equip = shelter_section.find('üîß', equip_start)
    
    equipment.append(shelter_section[equip_start:next_supply].strip())
    
    # –ò–∑–≤–ª–µ–∫–∞–µ–º –ø—Ä–∏–ø–∞—Å—ã
    supplies = []
    supply_start = shelter_section.find('üì¶') + 17
    next_supply = shelter_section.find('üì¶', supply_start)
    next_inhab = shelter_section.find('‚ôª')
    
    while next_supply != -1 and next_supply < next_inhab:
        supplies.append(shelter_section[supply_start:next_supply].strip())
        supply_start = next_supply + 17
        next_supply = shelter_section.find('üì¶', supply_start)
    
    supplies.append(shelter_section[supply_start:next_inhab].strip())
    
    # –ò–∑–≤–ª–µ–∫–∞–µ–º –æ–±–∏—Ç–∞—Ç–µ–ª–µ–π
    inhabitants = []
    inhab_start = shelter_section.find('‚ôª') + 18
    next_inhab = shelter_section.find('‚ôª', inhab_start)
    
    while next_inhab != -1 and next_inhab < end:
        inhabitants.append(shelter_section[inhab_start:next_inhab].strip())
        inhab_start = next_inhab + 18
        next_inhab = shelter_section.find('‚ôª', inhab_start)
    
    inhabitants.append(shelter_section[inhab_start:end].strip())
    
    return {
        'area': area,
        'time': time,
        'conditions': conditions,
        'equipment': equipment,
        'supplies': supplies,
        'inhabitants': inhabitants
    }

def parse_player(content):
    """–ü–∞—Ä—Å–∏—Ç –¥–∞–Ω–Ω—ã–µ –∏–≥—Ä–æ–∫–∞"""
    start = content.find('-----------–í–∞—à –ø–µ—Ä—Å–æ–Ω–∞–∂--------')
    if start == -1:
        raise ValueError("–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Ñ–∞–π–ª–∞: –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–µ—Ä—Å–æ–Ω–∞–∂–µ")
    
    player_section = content[start:]
    
    # –ò–∑–≤–ª–µ–∫–∞–µ–º –∏–º—è
    name_start = player_section.find('ü™™') + 14
    name_end = player_section.find('üíº')
    name = player_section[name_start:name_end].strip()
    
    # –ò–∑–≤–ª–µ–∫–∞–µ–º –ø—Ä–æ—Ñ–µ—Å—Å–∏—é
    profession_start = player_section.find('üíº') + 12
    profession_end = player_section.find('üë•')
    profession = player_section[profession_start:profession_end].strip()
    
    # –ò–∑–≤–ª–µ–∫–∞–µ–º –ø–æ–ª
    gender_start = player_section.find('üë•') + 6
    gender_end = player_section.find('üß∏')
    gender = player_section[gender_start:gender_end].strip()
    
    # –ò–∑–≤–ª–µ–∫–∞–µ–º –≤–æ–∑—Ä–∞—Å—Ç
    age_start = player_section.find('üß∏') + 10
    age_end = player_section.find('üë∂')
    age = int(player_section[age_start:age_end].strip())
    
    # –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–µ—Ç–æ—Ä–æ–∂–¥–µ–Ω–∏–µ
    childfree_start = player_section.find('üë∂') + 15
    childfree_end = player_section.find('üßò')
    childfree = player_section[childfree_start:childfree_end].strip()
    
    # –ò–∑–≤–ª–µ–∫–∞–µ–º —Ç–µ–ª–æ—Å–ª–æ–∂–µ–Ω–∏–µ
    physique_start = player_section.find('üßò') + 15
    physique_end = player_section.find('‚ù§')
    physique = player_section[physique_start:physique_end].strip()
    
    # –ò–∑–≤–ª–µ–∫–∞–µ–º –∑–¥–æ—Ä–æ–≤—å–µ
    health_start = player_section.find('‚ù§') + 10
    health_end = player_section.find('üë∫')
    health = [player_section[health_start:health_end].strip()]
    
    # –ò–∑–≤–ª–µ–∫–∞–µ–º —á–µ—Ä—Ç—ã —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∞
    traits_start = player_section.find('üë∫') + 18
    traits_end = player_section.find('üëª')
    traits = [player_section[traits_start:traits_end].strip()]
    
    # –ò–∑–≤–ª–µ–∫–∞–µ–º —Ñ–æ–±–∏–∏
    phobias_start = player_section.find('üëª') + 8
    phobias_end = player_section.find('üé£')
    phobias = [player_section[phobias_start:phobias_end].strip()]
    
    # –ò–∑–≤–ª–µ–∫–∞–µ–º —Ö–æ–±–±–∏
    hobbies_start = player_section.find('üé£') + 8
    hobbies_end = player_section.find('üìù')
    hobbies = [player_section[hobbies_start:hobbies_end].strip()]
    
    # –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–æ–ø. –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
    info_start = player_section.find('üìù') + 18
    info_end = player_section.find('üì¶')
    additional_info = [player_section[info_start:info_end].strip()]
    
    # –ò–∑–≤–ª–µ–∫–∞–µ–º –±–∞–≥–∞–∂
    baggage_start = player_section.find('üì¶') + 8
    baggage_end = player_section.find('üÉè')
    baggage = [player_section[baggage_start:baggage_end].strip()]
    
    # –ò–∑–≤–ª–µ–∫–∞–µ–º –∫–∞—Ä—Ç—ã
    card1_start = player_section.find('üÉè') + 10
    card1_end = player_section.find('üÉè', card1_start)
    card2_end = len(player_section)
    
    cards = [
        player_section[card1_start:card1_end].strip(),
        player_section[card1_end + 10:card2_end].strip()
    ]
    
    return {
        'name': name,
        'profession': profession,
        'gender': gender,
        'age': age,
        'childfree': childfree,
        'physique': physique,
        'health': health,
        'traits': traits,
        'phobias': phobias,
        'hobbies': hobbies,
        'additional_info': additional_info,
        'baggage': baggage,
        'cards': cards
    }

def get_available_games():
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∏–≥—Ä (–ø–∞–ø–æ–∫ –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ games)"""
    if not os.path.exists('games'):
        os.makedirs('games')
        return []
    
    return [d for d in os.listdir('games') if os.path.isdir(os.path.join('games', d))]